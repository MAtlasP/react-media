[{"/Users/faltun/Desktop/ReactProjects/react-media/src/App.js":"1","/Users/faltun/Desktop/ReactProjects/react-media/src/pages/Signup.js":"2","/Users/faltun/Desktop/ReactProjects/react-media/src/components/Navbar.js":"3","/Users/faltun/Desktop/ReactProjects/react-media/src/firebase/firebase.utils.js":"4","/Users/faltun/Desktop/ReactProjects/react-media/src/reportWebVitals.js":"5","/Users/faltun/Desktop/ReactProjects/react-media/src/index.js":"6","/Users/faltun/Desktop/ReactProjects/react-media/src/pages/Signin.js":"7","/Users/faltun/Desktop/ReactProjects/react-media/src/Router/Router.js":"8","/Users/faltun/Desktop/ReactProjects/react-media/src/router/Router.js":"9","/Users/faltun/Desktop/ReactProjects/react-media/src/context/AuthContext.js":"10","/Users/faltun/Desktop/ReactProjects/react-media/src/components/Footer.js":"11","/Users/faltun/Desktop/ReactProjects/react-media/src/pages/Main.js":"12"},{"size":226,"mtime":1610257145392,"results":"13","hashOfConfig":"14"},{"size":3833,"mtime":1610341584716,"results":"15","hashOfConfig":"14"},{"size":3010,"mtime":1610609321475,"results":"16","hashOfConfig":"14"},{"size":1516,"mtime":1610259856713,"results":"17","hashOfConfig":"14"},{"size":362,"mtime":1610084078843,"results":"18","hashOfConfig":"14"},{"size":500,"mtime":1610084078842,"results":"19","hashOfConfig":"14"},{"size":3459,"mtime":1610341174476,"results":"20","hashOfConfig":"14"},{"size":453,"mtime":1610253087968,"results":"21","hashOfConfig":"14"},{"size":604,"mtime":1610343407152,"results":"22","hashOfConfig":"14"},{"size":691,"mtime":1610257936563,"results":"23","hashOfConfig":"14"},{"size":1236,"mtime":1610608415085,"results":"24","hashOfConfig":"14"},{"size":1110,"mtime":1610609239689,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5ujmqc",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/faltun/Desktop/ReactProjects/react-media/src/App.js",[],"/Users/faltun/Desktop/ReactProjects/react-media/src/pages/Signup.js",[],["55","56"],"/Users/faltun/Desktop/ReactProjects/react-media/src/components/Navbar.js",["57"],"/Users/faltun/Desktop/ReactProjects/react-media/src/firebase/firebase.utils.js",[],["58","59"],"/Users/faltun/Desktop/ReactProjects/react-media/src/reportWebVitals.js",[],["60","61"],"/Users/faltun/Desktop/ReactProjects/react-media/src/index.js",[],"/Users/faltun/Desktop/ReactProjects/react-media/src/pages/Signin.js",["62"],"import React from 'react'\nimport {\n    Button,\n    TextField,\n    Grid,\n    Container,\n    Avatar,\n    Typography\n  } from \"@material-ui/core\";\n  import { makeStyles } from \"@material-ui/core/styles\";\n  import { useFormik } from \"formik\";\n  import firebase from \"../firebase/firebase.utils\";\n  import * as Yup from \"yup\";\n  import LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\nimport { grey } from '@material-ui/core/colors';\n\n  const signInValidationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required!!!\"),\n    password: Yup.string()\n    .required(\"Password is required!!!\")\n    .min(8, \"Password is too short - should be atlest 8 chars\"),\n  })\n\n  const stylesFunc = makeStyles((theme) => ({\n    wrapper: {\n      marginTop: \"5rem\",\n      textAlign: \"center\",\n    },\n    avatar: {\n      margin: \"1rem auto\",\n      backgroundColor: theme.palette.secondary.main,\n    },\n    label: {\n      padding: \"5rem\",\n    }\n  }));\n\n  function Signin() {\n    const signinStyles = stylesFunc();\n  \n    const formik = useFormik({\n      initialValues: {\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n      },\n      validationSchema: signInValidationSchema,\n      onSubmit: (values) => {\n        firebase.signIn(values.displayName, values.email, values.password)\n       \n      },\n    });\n\n    const handleGoogleButtonClick = () => {\n        firebase.useGoogleProvider();\n      }\n  \n\n\n  return (\n    <Container className={signinStyles.wrapper} maxWidth=\"sm\">\n      <Avatar className={signinStyles.avatar}>\n        <LockOutlinedIcon/>\n      </Avatar>\n      <Typography variant=\"h4\" >\n        <p calssName={signinStyles.label}>Sign In</p>\n      </Typography>\n      <form onSubmit={formik.handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              name=\"email\"\n              id=\"outlined-basic\"\n              label=\"Email\"\n              variant=\"outlined\"\n              fullWidth\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.errors.email}\n              helperText={formik.errors.email}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              name=\"password\"\n              id=\"outlined-basic\"\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              fullWidth\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.errors.password}\n              helperText={formik.errors.password}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              fullWidth\n            >\n              SUBMIT\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              fullWidth\n              onClick={ handleGoogleButtonClick }\n            >\n              SIGN UP WITH GOOGLE\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      {/*\n                //display name input\n                //email input\n                //password input\n                //submit nutton\n\n                //google signup button\n            */}\n    </Container>\n  );\n}\n\nexport default Signin;","/Users/faltun/Desktop/ReactProjects/react-media/src/Router/Router.js",[],"/Users/faltun/Desktop/ReactProjects/react-media/src/router/Router.js",[],"/Users/faltun/Desktop/ReactProjects/react-media/src/context/AuthContext.js",["63","64"],"import { createContext, useState, useEffect } from 'react'\nimport firebase from '../firebase/firebase.utils'\n\nexport const FirebaseAuthContext = createContext();\n\nfunction AuthContextProvider(props) {\n    const [isAuthenticated, setAuthenticated] = useState(false);\n    const [currentUser, setCurrentUser] = useState();\n\n    useEffect(() => {\n        firebase.firebaseAuth.onAuthStateChanged((user) => {\n            console.log(\"user\", user);\n            setCurrentUser(user)\n        });\n    }, []);\n\n    return (\n        <FirebaseAuthContext.Provider value={{ currentUser }}>\n            {props.children}\n        </FirebaseAuthContext.Provider>\n    );\n}\n\nexport default AuthContextProvider;","/Users/faltun/Desktop/ReactProjects/react-media/src/components/Footer.js",["65"],"/Users/faltun/Desktop/ReactProjects/react-media/src/pages/Main.js",["66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":37,"column":16,"nodeType":"73","messageId":"74","endLine":37,"endColumn":23},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","replacedBy":"76"},{"ruleId":"67","replacedBy":"77"},{"ruleId":"69","replacedBy":"78"},{"ruleId":"71","severity":1,"message":"79","line":15,"column":10,"nodeType":"73","messageId":"74","endLine":15,"endColumn":14},{"ruleId":"71","severity":1,"message":"80","line":7,"column":12,"nodeType":"73","messageId":"74","endLine":7,"endColumn":27},{"ruleId":"71","severity":1,"message":"81","line":7,"column":29,"nodeType":"73","messageId":"74","endLine":7,"endColumn":45},{"ruleId":"82","severity":1,"message":"83","line":26,"column":5,"nodeType":"84","messageId":"85","endLine":26,"endColumn":11},{"ruleId":"86","severity":1,"message":"87","line":31,"column":6,"nodeType":"88","endLine":31,"endColumn":8,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'setAuth' is assigned a value but never used.","Identifier","unusedVar",["90"],["91"],["90"],["91"],"'grey' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'setAuthenticated' is assigned a value but never used.","no-dupe-keys","Duplicate key 'bottom'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData' and 'userList'. Either include them or remove the dependency array.","ArrayExpression",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [fetchData, userList]",{"range":"95","text":"96"},[811,813],"[fetchData, userList]"]